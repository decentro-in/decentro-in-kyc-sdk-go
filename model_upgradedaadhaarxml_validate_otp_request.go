/*
decentro-in-kyc Copy 6

KYC & Onboarding

API version: 1.0.0
Contact: admin@decentro.tech
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package decentroinkyc

import (
	"encoding/json"
)

// UpgradedaadhaarxmlValidateOtpRequest struct for UpgradedaadhaarxmlValidateOtpRequest
type UpgradedaadhaarxmlValidateOtpRequest struct {
	ReferenceId *string `json:"reference_id,omitempty"`
	Consent *bool `json:"consent,omitempty"`
	Purpose *string `json:"purpose,omitempty"`
	InitiationTransactionId *string `json:"initiation_transaction_id,omitempty"`
	Otp *string `json:"otp,omitempty"`
	ShareCode *string `json:"share_code,omitempty"`
	GeneratePdf *bool `json:"generate_pdf,omitempty"`
	GenerateXml *bool `json:"generate_xml,omitempty"`
}

// NewUpgradedaadhaarxmlValidateOtpRequest instantiates a new UpgradedaadhaarxmlValidateOtpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradedaadhaarxmlValidateOtpRequest() *UpgradedaadhaarxmlValidateOtpRequest {
	this := UpgradedaadhaarxmlValidateOtpRequest{}
	return &this
}

// NewUpgradedaadhaarxmlValidateOtpRequestWithDefaults instantiates a new UpgradedaadhaarxmlValidateOtpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradedaadhaarxmlValidateOtpRequestWithDefaults() *UpgradedaadhaarxmlValidateOtpRequest {
	this := UpgradedaadhaarxmlValidateOtpRequest{}
	return &this
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetReferenceId() string {
	if o == nil || isNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetReferenceIdOk() (*string, bool) {
	if o == nil || isNil(o.ReferenceId) {
    return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasReferenceId() bool {
	if o != nil && !isNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetConsent returns the Consent field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetConsent() bool {
	if o == nil || isNil(o.Consent) {
		var ret bool
		return ret
	}
	return *o.Consent
}

// GetConsentOk returns a tuple with the Consent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetConsentOk() (*bool, bool) {
	if o == nil || isNil(o.Consent) {
    return nil, false
	}
	return o.Consent, true
}

// HasConsent returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasConsent() bool {
	if o != nil && !isNil(o.Consent) {
		return true
	}

	return false
}

// SetConsent gets a reference to the given bool and assigns it to the Consent field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetConsent(v bool) {
	o.Consent = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetPurpose() string {
	if o == nil || isNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetPurposeOk() (*string, bool) {
	if o == nil || isNil(o.Purpose) {
    return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasPurpose() bool {
	if o != nil && !isNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetPurpose(v string) {
	o.Purpose = &v
}

// GetInitiationTransactionId returns the InitiationTransactionId field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetInitiationTransactionId() string {
	if o == nil || isNil(o.InitiationTransactionId) {
		var ret string
		return ret
	}
	return *o.InitiationTransactionId
}

// GetInitiationTransactionIdOk returns a tuple with the InitiationTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetInitiationTransactionIdOk() (*string, bool) {
	if o == nil || isNil(o.InitiationTransactionId) {
    return nil, false
	}
	return o.InitiationTransactionId, true
}

// HasInitiationTransactionId returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasInitiationTransactionId() bool {
	if o != nil && !isNil(o.InitiationTransactionId) {
		return true
	}

	return false
}

// SetInitiationTransactionId gets a reference to the given string and assigns it to the InitiationTransactionId field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetInitiationTransactionId(v string) {
	o.InitiationTransactionId = &v
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetOtp() string {
	if o == nil || isNil(o.Otp) {
		var ret string
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetOtpOk() (*string, bool) {
	if o == nil || isNil(o.Otp) {
    return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasOtp() bool {
	if o != nil && !isNil(o.Otp) {
		return true
	}

	return false
}

// SetOtp gets a reference to the given string and assigns it to the Otp field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetOtp(v string) {
	o.Otp = &v
}

// GetShareCode returns the ShareCode field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetShareCode() string {
	if o == nil || isNil(o.ShareCode) {
		var ret string
		return ret
	}
	return *o.ShareCode
}

// GetShareCodeOk returns a tuple with the ShareCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetShareCodeOk() (*string, bool) {
	if o == nil || isNil(o.ShareCode) {
    return nil, false
	}
	return o.ShareCode, true
}

// HasShareCode returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasShareCode() bool {
	if o != nil && !isNil(o.ShareCode) {
		return true
	}

	return false
}

// SetShareCode gets a reference to the given string and assigns it to the ShareCode field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetShareCode(v string) {
	o.ShareCode = &v
}

// GetGeneratePdf returns the GeneratePdf field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetGeneratePdf() bool {
	if o == nil || isNil(o.GeneratePdf) {
		var ret bool
		return ret
	}
	return *o.GeneratePdf
}

// GetGeneratePdfOk returns a tuple with the GeneratePdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetGeneratePdfOk() (*bool, bool) {
	if o == nil || isNil(o.GeneratePdf) {
    return nil, false
	}
	return o.GeneratePdf, true
}

// HasGeneratePdf returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasGeneratePdf() bool {
	if o != nil && !isNil(o.GeneratePdf) {
		return true
	}

	return false
}

// SetGeneratePdf gets a reference to the given bool and assigns it to the GeneratePdf field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetGeneratePdf(v bool) {
	o.GeneratePdf = &v
}

// GetGenerateXml returns the GenerateXml field value if set, zero value otherwise.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetGenerateXml() bool {
	if o == nil || isNil(o.GenerateXml) {
		var ret bool
		return ret
	}
	return *o.GenerateXml
}

// GetGenerateXmlOk returns a tuple with the GenerateXml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) GetGenerateXmlOk() (*bool, bool) {
	if o == nil || isNil(o.GenerateXml) {
    return nil, false
	}
	return o.GenerateXml, true
}

// HasGenerateXml returns a boolean if a field has been set.
func (o *UpgradedaadhaarxmlValidateOtpRequest) HasGenerateXml() bool {
	if o != nil && !isNil(o.GenerateXml) {
		return true
	}

	return false
}

// SetGenerateXml gets a reference to the given bool and assigns it to the GenerateXml field.
func (o *UpgradedaadhaarxmlValidateOtpRequest) SetGenerateXml(v bool) {
	o.GenerateXml = &v
}

func (o UpgradedaadhaarxmlValidateOtpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ReferenceId) {
		toSerialize["reference_id"] = o.ReferenceId
	}
	if !isNil(o.Consent) {
		toSerialize["consent"] = o.Consent
	}
	if !isNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !isNil(o.InitiationTransactionId) {
		toSerialize["initiation_transaction_id"] = o.InitiationTransactionId
	}
	if !isNil(o.Otp) {
		toSerialize["otp"] = o.Otp
	}
	if !isNil(o.ShareCode) {
		toSerialize["share_code"] = o.ShareCode
	}
	if !isNil(o.GeneratePdf) {
		toSerialize["generate_pdf"] = o.GeneratePdf
	}
	if !isNil(o.GenerateXml) {
		toSerialize["generate_xml"] = o.GenerateXml
	}
	return json.Marshal(toSerialize)
}

type NullableUpgradedaadhaarxmlValidateOtpRequest struct {
	value *UpgradedaadhaarxmlValidateOtpRequest
	isSet bool
}

func (v NullableUpgradedaadhaarxmlValidateOtpRequest) Get() *UpgradedaadhaarxmlValidateOtpRequest {
	return v.value
}

func (v *NullableUpgradedaadhaarxmlValidateOtpRequest) Set(val *UpgradedaadhaarxmlValidateOtpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradedaadhaarxmlValidateOtpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradedaadhaarxmlValidateOtpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradedaadhaarxmlValidateOtpRequest(val *UpgradedaadhaarxmlValidateOtpRequest) *NullableUpgradedaadhaarxmlValidateOtpRequest {
	return &NullableUpgradedaadhaarxmlValidateOtpRequest{value: val, isSet: true}
}

func (v NullableUpgradedaadhaarxmlValidateOtpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradedaadhaarxmlValidateOtpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


